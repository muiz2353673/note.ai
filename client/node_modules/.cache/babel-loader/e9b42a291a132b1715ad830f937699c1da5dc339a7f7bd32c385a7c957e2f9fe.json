{"ast":null,"code":"var _jsxFileName = \"/Users/muiz/Downloads/note.ai/client/src/components/PaymentModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-hot-toast\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\n\n// Load Stripe (replace with your publishable key)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || \"\");\nconst PaymentForm = ({\n  plan,\n  onSuccess,\n  onClose\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setLoading(true);\n    try {\n      // Get payment method\n      const cardElement = elements.getElement(CardElement);\n      if (!cardElement) {\n        throw new Error(\"Card element not found\");\n      }\n      const {\n        error: paymentMethodError,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: cardElement\n      });\n      if (paymentMethodError) {\n        throw new Error(paymentMethodError.message);\n      }\n\n      // Map plan names to backend format\n      const planMapping = {\n        \"Student Premium\": \"student\",\n        \"University\": \"university\",\n        \"Free\": \"free\"\n      };\n      const backendPlanName = planMapping[plan.name] || plan.name.toLowerCase().replace(\" \", \"\");\n\n      // Create subscription\n      const response = await fetch(\"/api/subscriptions/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          plan: backendPlanName,\n          paymentMethodId: paymentMethod.id\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.error || \"Failed to create subscription\");\n      }\n\n      // Confirm payment\n      const {\n        error: confirmError\n      } = await stripe.confirmCardPayment(result.clientSecret);\n      if (confirmError) {\n        throw new Error(confirmError.message);\n      }\n      toast.success(\"Subscription created successfully!\");\n      onSuccess();\n      onClose();\n    } catch (error) {\n      console.error(\"Payment error:\", error);\n      toast.error(error.message || \"Payment failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-4\",\n        children: [\"Subscribe to \", plan.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded-lg mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700\",\n            children: [plan.name, \" Plan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-gray-900\",\n            children: [plan.price, \" \", plan.period]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700 mb-2\",\n        children: \"Card Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-300 rounded-lg p-3\",\n        children: /*#__PURE__*/_jsxDEV(CardElement, {\n          options: {\n            style: {\n              base: {\n                fontSize: \"16px\",\n                color: \"#424770\",\n                \"::placeholder\": {\n                  color: \"#aab7c4\"\n                }\n              },\n              invalid: {\n                color: \"#9e2146\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        className: \"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || loading,\n        className: \"flex-1 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n        children: loading ? \"Processing...\" : `Subscribe for ${plan.price}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"GyjitGMhIec78XX8Ioi2UT7LwoQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nconst PaymentModal = ({\n  isOpen,\n  onClose,\n  plan\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 w-full max-w-md mx-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900\",\n          children: \"Complete Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-400 hover:text-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsxDEV(PaymentForm, {\n          plan: plan,\n          onSuccess: () => {\n            // Refresh user data or redirect\n            window.location.reload();\n          },\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PaymentModal;\nexport default PaymentModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"PaymentModal\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","toast","XMarkIcon","jsxDEV","_jsxDEV","stripePromise","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","PaymentForm","plan","onSuccess","onClose","_s","stripe","elements","loading","setLoading","handleSubmit","event","preventDefault","cardElement","getElement","Error","error","paymentMethodError","paymentMethod","createPaymentMethod","type","card","message","planMapping","backendPlanName","name","toLowerCase","replace","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","paymentMethodId","id","result","json","ok","confirmError","confirmCardPayment","clientSecret","success","console","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","price","period","options","style","base","fontSize","color","invalid","onClick","disabled","_c","PaymentModal","isOpen","window","location","reload","_c2","$RefreshReg$"],"sources":["/Users/muiz/Downloads/note.ai/client/src/components/PaymentModal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-hot-toast\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\n\n// Load Stripe (replace with your publishable key)\nconst stripePromise = loadStripe(\n  process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || \"\"\n);\n\ninterface PaymentModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  plan: {\n    name: string;\n    price: string;\n    period: string;\n    features: string[];\n  };\n}\n\nconst PaymentForm: React.FC<{\n  plan: any;\n  onSuccess: () => void;\n  onClose: () => void;\n}> = ({ plan, onSuccess, onClose }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      // Get payment method\n      const cardElement = elements.getElement(CardElement);\n      if (!cardElement) {\n        throw new Error(\"Card element not found\");\n      }\n\n      const { error: paymentMethodError, paymentMethod } =\n        await stripe.createPaymentMethod({\n          type: \"card\",\n          card: cardElement,\n        });\n\n      if (paymentMethodError) {\n        throw new Error(paymentMethodError.message);\n      }\n\n      // Map plan names to backend format\n      const planMapping: { [key: string]: string } = {\n        \"Student Premium\": \"student\",\n        \"University\": \"university\",\n        \"Free\": \"free\"\n      };\n      \n      const backendPlanName = planMapping[plan.name] || plan.name.toLowerCase().replace(\" \", \"\");\n\n      // Create subscription\n      const response = await fetch(\"/api/subscriptions/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n        body: JSON.stringify({\n          plan: backendPlanName,\n          paymentMethodId: paymentMethod.id,\n        }),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || \"Failed to create subscription\");\n      }\n\n      // Confirm payment\n      const { error: confirmError } = await stripe.confirmCardPayment(\n        result.clientSecret\n      );\n\n      if (confirmError) {\n        throw new Error(confirmError.message);\n      }\n\n      toast.success(\"Subscription created successfully!\");\n      onSuccess();\n      onClose();\n    } catch (error: any) {\n      console.error(\"Payment error:\", error);\n      toast.error(error.message || \"Payment failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n          Subscribe to {plan.name}\n        </h3>\n        <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-gray-700\">{plan.name} Plan</span>\n            <span className=\"font-semibold text-gray-900\">\n              {plan.price} {plan.period}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Card Information\n        </label>\n        <div className=\"border border-gray-300 rounded-lg p-3\">\n          <CardElement\n            options={{\n              style: {\n                base: {\n                  fontSize: \"16px\",\n                  color: \"#424770\",\n                  \"::placeholder\": {\n                    color: \"#aab7c4\",\n                  },\n                },\n                invalid: {\n                  color: \"#9e2146\",\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"flex space-x-3\">\n        <button\n          type=\"button\"\n          onClick={onClose}\n          className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          disabled={!stripe || loading}\n          className=\"flex-1 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          {loading ? \"Processing...\" : `Subscribe for ${plan.price}`}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst PaymentModal: React.FC<PaymentModalProps> = ({\n  isOpen,\n  onClose,\n  plan,\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            Complete Payment\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        <Elements stripe={stripePromise}>\n          <PaymentForm\n            plan={plan}\n            onSuccess={() => {\n              // Refresh user data or redirect\n              window.location.reload();\n            }}\n            onClose={onClose}\n          />\n        </Elements>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}