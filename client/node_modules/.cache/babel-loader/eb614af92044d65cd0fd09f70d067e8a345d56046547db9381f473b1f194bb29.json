{"ast":null,"code":"import React,{useState}from\"react\";import{loadStripe}from\"@stripe/stripe-js\";import{Elements,CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import{toast}from\"react-hot-toast\";import{XMarkIcon}from\"@heroicons/react/24/outline\";// Load Stripe (replace with your publishable key)\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const stripePromise=loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY||\"\");const PaymentForm=_ref=>{let{plan,onSuccess,onClose}=_ref;const stripe=useStripe();const elements=useElements();const[loading,setLoading]=useState(false);const handleSubmit=async event=>{event.preventDefault();if(!stripe||!elements){return;}setLoading(true);try{// Get payment method\nconst cardElement=elements.getElement(CardElement);if(!cardElement){throw new Error(\"Card element not found\");}const{error:paymentMethodError,paymentMethod}=await stripe.createPaymentMethod({type:\"card\",card:cardElement});if(paymentMethodError){throw new Error(paymentMethodError.message);}// Map plan names to backend format\nconst planMapping={\"Student Premium\":\"student\",University:\"university\",Free:\"free\"};const backendPlanName=planMapping[plan.name]||plan.name.toLowerCase().replace(\" \",\"\");// Create subscription\nconst response=await fetch(\"/api/subscriptions/create\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`},body:JSON.stringify({plan:backendPlanName,paymentMethodId:paymentMethod.id})});const result=await response.json();if(!response.ok){throw new Error(result.error||\"Failed to create subscription\");}// Handle free plan (no payment confirmation needed)\nif(result.clientSecret===null){toast.success(\"Free plan activated successfully!\");onSuccess();onClose();return;}// Confirm payment\nconst{error:confirmError}=await stripe.confirmCardPayment(result.clientSecret);if(confirmError){throw new Error(confirmError.message);}toast.success(\"Subscription created successfully!\");onSuccess();onClose();}catch(error){console.error(\"Payment error:\",error);toast.error(error.message||\"Payment failed\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:[\"Subscribe to \",plan.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 p-4 rounded-lg mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-700\",children:[plan.name,\" Plan\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-semibold text-gray-900\",children:[plan.price,\" \",plan.period]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Card Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-gray-300 rounded-lg p-3\",children:/*#__PURE__*/_jsx(CardElement,{options:{style:{base:{fontSize:\"16px\",color:\"#424770\",\"::placeholder\":{color:\"#aab7c4\"}},invalid:{color:\"#9e2146\"}}}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!stripe||loading,className:\"flex-1 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",children:loading?\"Processing...\":`Subscribe for ${plan.price}`})]})]});};const PaymentModal=_ref2=>{let{isOpen,onClose,plan}=_ref2;if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 w-full max-w-md mx-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900\",children:\"Complete Payment\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"text-gray-400 hover:text-gray-600 transition-colors\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"w-6 h-6\"})})]}),/*#__PURE__*/_jsx(Elements,{stripe:stripePromise,children:/*#__PURE__*/_jsx(PaymentForm,{plan:plan,onSuccess:()=>{// Refresh user data or redirect\nwindow.location.reload();},onClose:onClose})})]})});};export default PaymentModal;","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","toast","XMarkIcon","jsxs","_jsxs","jsx","_jsx","stripePromise","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","PaymentForm","_ref","plan","onSuccess","onClose","stripe","elements","loading","setLoading","handleSubmit","event","preventDefault","cardElement","getElement","Error","error","paymentMethodError","paymentMethod","createPaymentMethod","type","card","message","planMapping","University","Free","backendPlanName","name","toLowerCase","replace","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","paymentMethodId","id","result","json","ok","clientSecret","success","confirmError","confirmCardPayment","console","onSubmit","className","children","price","period","options","style","base","fontSize","color","invalid","onClick","disabled","PaymentModal","_ref2","isOpen","window","location","reload"],"sources":["/Users/muiz/Documents/GitHub/note.ai/client/src/components/PaymentModal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-hot-toast\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\n\n// Load Stripe (replace with your publishable key)\nconst stripePromise = loadStripe(\n  process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || \"\"\n);\n\ninterface PaymentModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  plan: {\n    name: string;\n    price: string;\n    period: string;\n    features: string[];\n  };\n}\n\nconst PaymentForm: React.FC<{\n  plan: any;\n  onSuccess: () => void;\n  onClose: () => void;\n}> = ({ plan, onSuccess, onClose }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      // Get payment method\n      const cardElement = elements.getElement(CardElement);\n      if (!cardElement) {\n        throw new Error(\"Card element not found\");\n      }\n\n      const { error: paymentMethodError, paymentMethod } =\n        await stripe.createPaymentMethod({\n          type: \"card\",\n          card: cardElement,\n        });\n\n      if (paymentMethodError) {\n        throw new Error(paymentMethodError.message);\n      }\n\n      // Map plan names to backend format\n      const planMapping: { [key: string]: string } = {\n        \"Student Premium\": \"student\",\n        University: \"university\",\n        Free: \"free\",\n      };\n\n      const backendPlanName =\n        planMapping[plan.name] || plan.name.toLowerCase().replace(\" \", \"\");\n\n      // Create subscription\n      const response = await fetch(\"/api/subscriptions/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n        body: JSON.stringify({\n          plan: backendPlanName,\n          paymentMethodId: paymentMethod.id,\n        }),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || \"Failed to create subscription\");\n      }\n\n      // Handle free plan (no payment confirmation needed)\n      if (result.clientSecret === null) {\n        toast.success(\"Free plan activated successfully!\");\n        onSuccess();\n        onClose();\n        return;\n      }\n\n      // Confirm payment\n      const { error: confirmError } = await stripe.confirmCardPayment(\n        result.clientSecret\n      );\n\n      if (confirmError) {\n        throw new Error(confirmError.message);\n      }\n\n      toast.success(\"Subscription created successfully!\");\n      onSuccess();\n      onClose();\n    } catch (error: any) {\n      console.error(\"Payment error:\", error);\n      toast.error(error.message || \"Payment failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n          Subscribe to {plan.name}\n        </h3>\n        <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-gray-700\">{plan.name} Plan</span>\n            <span className=\"font-semibold text-gray-900\">\n              {plan.price} {plan.period}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Card Information\n        </label>\n        <div className=\"border border-gray-300 rounded-lg p-3\">\n          <CardElement\n            options={{\n              style: {\n                base: {\n                  fontSize: \"16px\",\n                  color: \"#424770\",\n                  \"::placeholder\": {\n                    color: \"#aab7c4\",\n                  },\n                },\n                invalid: {\n                  color: \"#9e2146\",\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"flex space-x-3\">\n        <button\n          type=\"button\"\n          onClick={onClose}\n          className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          disabled={!stripe || loading}\n          className=\"flex-1 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          {loading ? \"Processing...\" : `Subscribe for ${plan.price}`}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst PaymentModal: React.FC<PaymentModalProps> = ({\n  isOpen,\n  onClose,\n  plan,\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            Complete Payment\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        <Elements stripe={stripePromise}>\n          <PaymentForm\n            plan={plan}\n            onSuccess={() => {\n              // Refresh user data or redirect\n              window.location.reload();\n            }}\n            onClose={onClose}\n          />\n        </Elements>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}