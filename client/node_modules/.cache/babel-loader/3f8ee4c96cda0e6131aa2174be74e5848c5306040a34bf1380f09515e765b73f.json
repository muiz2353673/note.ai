{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5002/api\";\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: data => api.post(\"/auth/register\", data),\n  login: data => api.post(\"/auth/login\", data),\n  refresh: () => api.post(\"/auth/refresh\"),\n  logout: () => api.post(\"/auth/logout\")\n};\n\n// Notes API\nexport const notesAPI = {\n  getAll: () => api.get(\"/notes\"),\n  getById: id => api.get(`/notes/${id}`),\n  create: data => api.post(\"/notes\", data),\n  update: (id, data) => api.put(`/notes/${id}`, data),\n  delete: id => api.delete(`/notes/${id}`)\n};\n\n// AI API\nexport const aiAPI = {\n  summarize: data => api.post(\"/ai/summarize\", data),\n  generateFlashcards: data => api.post(\"/ai/flashcards\", data),\n  assignment: data => api.post(\"/ai/assignment\", data),\n  cite: data => api.post(\"/ai/cite\", data),\n  citeFromURL: data => api.post(\"/ai/cite-from-url\", data)\n};\n\n// Subscriptions API\nexport const subscriptionsAPI = {\n  getStatus: () => api.get(\"/subscriptions/status\"),\n  create: data => api.post(\"/subscriptions/create\", data),\n  cancel: () => api.post(\"/subscriptions/cancel\")\n};\n\n// Universities API\nexport const universitiesAPI = {\n  contact: data => api.post(\"/universities/contact\", data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","data","post","login","refresh","logout","notesAPI","getAll","get","getById","id","update","put","delete","aiAPI","summarize","generateFlashcards","assignment","cite","citeFromURL","subscriptionsAPI","getStatus","cancel","universitiesAPI","contact"],"sources":["/Users/muiz/Documents/GitHub/note.ai/client/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_URL || \"http://localhost:5002/api\";\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  register: (data: any) => api.post(\"/auth/register\", data),\n  login: (data: any) => api.post(\"/auth/login\", data),\n  refresh: () => api.post(\"/auth/refresh\"),\n  logout: () => api.post(\"/auth/logout\"),\n};\n\n// Notes API\nexport const notesAPI = {\n  getAll: () => api.get(\"/notes\"),\n  getById: (id: string) => api.get(`/notes/${id}`),\n  create: (data: any) => api.post(\"/notes\", data),\n  update: (id: string, data: any) => api.put(`/notes/${id}`, data),\n  delete: (id: string) => api.delete(`/notes/${id}`),\n};\n\n// AI API\nexport const aiAPI = {\n  summarize: (data: any) => api.post(\"/ai/summarize\", data),\n  generateFlashcards: (data: any) => api.post(\"/ai/flashcards\", data),\n  assignment: (data: any) => api.post(\"/ai/assignment\", data),\n  cite: (data: any) => api.post(\"/ai/cite\", data),\n  citeFromURL: (data: any) => api.post(\"/ai/cite-from-url\", data),\n};\n\n// Subscriptions API\nexport const subscriptionsAPI = {\n  getStatus: () => api.get(\"/subscriptions/status\"),\n  create: (data: any) => api.post(\"/subscriptions/create\", data),\n  cancel: () => api.post(\"/subscriptions/cancel\"),\n};\n\n// Universities API\nexport const universitiesAPI = {\n  contact: (data: any) => api.post(\"/universities/contact\", data),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}